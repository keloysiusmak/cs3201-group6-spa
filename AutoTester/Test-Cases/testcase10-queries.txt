1 - 
stmt s1; while w1; prog_line n1; if ifs1; 
Select <s1, w1, n1, ifs1> such that Follows(s1, w1) such that Follows(s1, n1) such that Follows(w1, ifs1)

5000
2 - 
while w1; call c1; prog_line n1; if ifs1; 
Select <w1, c1, n1, ifs1> such that Follows(n1, ifs1) such that Follows(n1, c1) such that Next*(ifs1, w1)

5000
3 - 
stmt s1; prog_line n1, n2; if ifs1; 
Select <s1, n1, n2, ifs1> such that Follows(n1, n2) such that Follows(n2, s1) such that Next*(s1, ifs1)

5000
4 - 
stmt s1; call c1; if ifs1, ifs2; 
Select <s1, c1, ifs1, ifs2> such that Follows(c1, ifs1) such that Follows*(c1, s1) such that Parent(ifs1, ifs2)

5000
5 - 
assign a1, a2; stmt s1; prog_line n1; 
Select <a1, a2, s1, n1> such that Follows(a1, a2) such that Follows*(a2, s1) such that Parent(s1, n1)

5000
6 - 
stmt s1; call c1; if ifs1, ifs2; 
Select <s1, c1, ifs1, ifs2> such that Follows(ifs1, ifs2) such that Parent(ifs2, s1) such that Parent(ifs2, c1)

5000
7 - 
assign a1; while w1; prog_line n1, n2; 
Select <a1, w1, n1, n2> such that Follows(n1, w1) such that Parent(n1, a1) such that Parent(w1, n2)

5000
8 - 
assign a1, a2; call c1; prog_line n1; 
Select <a1, a2, c1, n1> such that Follows(n1, c1) such that Parent*(n1, a1) such that Affects(a1, a2)

5000
9 - 
while w1; prog_line n1, n2, n3; 
Select <n1, n2, n3> such that Follows(n1, n2) such that Parent*(n2, w1) such that Next(w1, n3)

5000
10 - 
assign a1; call c1; if ifs1; constant ct1; 
Select <a1, c1, ifs1, ct1> such that Follows(a1, c1) such that Parent*(a1, ifs1) with ifs1.stmt# = ct1.value 

5000
11 - 
assign a1; stmt s1; variable v1; prog_line n1; 
Select <a1, s1, v1, n1> such that Follows(a1, n1) such that Uses(a1, v1) such that Uses(s1, v1)

5000
12 - 
stmt s1, s2; while w1; variable v1; 
Select <s1, s2, w1, v1> such that Follows(s1, s2) such that Uses(s2, v1) such that Follows*(s2, w1)

5000
13 - 
stmt s1, s2; variable v1; proc p1; 
Select <s1, s2, v1, p1> such that Follows(s1, s2) such that Uses(s2, v1) with v1.varName = p1.procName 

5000
14 - 
assign a1; variable v1, v2; prog_line n1; 
Select <a1, v1, v2, n1> such that Follows(a1, n1) such that Modifies(a1, v1) such that Modifies(n1, v2)

5000
15 - 
while w1, w2; variable v1; call c1; 
Select <w1, w2, v1, c1> such that Follows(w1, w2) such that Modifies(w2, v1) with v1.varName = c1.procName 

5000
16 - 
while w1, w2; variable v1; call c1; 
Select <w1, w2, v1, c1> such that Follows(w1, c1) such that Modifies(w1, v1) pattern w2(v1, _)

5000
17 - 
assign a1; variable v1; call c1; if ifs1; 
Select <a1, v1, c1, ifs1> such that Follows(a1, ifs1) such that Next(a1, c1) such that Modifies(c1, v1)

5000
18 - 
while w1, w2, w3; if ifs1; 
Select <w1, w2, w3, ifs1> such that Follows(w1, w2) such that Next(w2, ifs1) such that Parent(ifs1, w3)

5000
19 - 
assign a1, a2; stmt s1; call c1; 
Select <a1, a2, s1, c1> such that Follows(c1, s1) such that Next(c1, a1) such that Follows(a1, a2)

5000
20 - 
stmt s1; while w1; variable v1; if ifs1; 
Select <s1, w1, v1, ifs1> such that Follows(ifs1, s1) such that Next*(ifs1, w1) pattern w1(v1, _)

5000
21 - 
stmt s1; while w1; call c1; constant ct1; 
Select <s1, w1, c1, ct1> such that Follows(c1, s1) such that Next*(c1, w1) with s1.stmt# = ct1.value 

5000
22 - 
assign a1, a2, a3; while w1; 
Select <a1, a2, a3, w1> such that Follows(a1, a2) such that Affects(a2, a3) such that Follows*(a3, w1)

5000
23 - 
assign a1, a2, a3; constant ct1; 
Select <a1, a2, a3, ct1> such that Follows(a1, a2) such that Affects(a2, a3) with a3.stmt# = ct1.value 

5000
24 - 
assign a1, a2, a3; while w1; 
Select <a1, a2, a3, w1> such that Follows(a1, w1) such that Affects*(a1, a2) such that Affects*(a2, a3)

5000
25 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Follows(a1, c1) such that Affects*(a1, a2) such that Uses(a2, v1)

5000
26 - 
while w1; variable v1; prog_line n1; if ifs1; 
Select <w1, v1, n1, ifs1> such that Follows(ifs1, w1) pattern ifs1(v1, _, _) such that Follows*(w1, n1)

5000
27 - 
assign a1; variable v1; proc p1; prog_line n1; 
Select <a1, v1, p1, n1> such that Follows(a1, n1) pattern a1(v1, _) with v1.varName = p1.procName 

5000
28 - 
stmt s1; call c1; proc p1, p2; 
Select <s1, c1, p1, p2> such that Follows(c1, s1) with c1.procName = p1.procName such that Calls(p1, p2)

5000
29 - 
assign a1; variable v1; call c1; proc p1; 
Select <a1, v1, c1, p1> such that Follows(c1, a1) with c1.procName = p1.procName pattern a1(v1, _)

5000
30 - 
stmt s1, s2; while w1; constant ct1; 
Select <s1, s2, w1, ct1> such that Follows(s1, s2) with s2.stmt# = ct1.value such that Parent(s2, w1)

5000
31 - 
while w1; call c1; if ifs1; constant ct1; 
Select <w1, c1, ifs1, ct1> such that Follows(ifs1, w1) with ifs1.stmt# = ct1.value such that Parent(w1, c1)

5000
32 - 
stmt s1; while w1; variable v1; prog_line n1; 
Select <s1, w1, v1, n1> such that Follows*(w1, s1) such that Follows(w1, n1) such that Uses(n1, v1)

5000
33 - 
assign a1; stmt s1; while w1; variable v1; 
Select <a1, s1, w1, v1> such that Follows*(s1, a1) such that Follows(s1, w1) such that Modifies(w1, v1)

5000
34 - 
stmt s1, s2; variable v1; prog_line n1; 
Select <s1, s2, v1, n1> such that Follows*(s1, n1) such that Follows*(s1, s2) such that Modifies(s2, v1)

5000
35 - 
assign a1; stmt s1, s2; call c1; 
Select <a1, s1, s2, c1> such that Follows*(s1, c1) such that Follows*(s1, s2) such that Follows(c1, a1)

5000
36 - 
call c1, c2; proc p1; if ifs1; 
Select <c1, c2, p1, ifs1> such that Follows*(c1, ifs1) such that Follows*(c1, c2) with c2.procName = p1.procName 

5000
37 - 
assign a1; stmt s1; call c1; if ifs1; 
Select <a1, s1, c1, ifs1> such that Follows*(a1, c1) such that Parent(a1, ifs1) such that Next(ifs1, s1)

5000
38 - 
call c1; prog_line n1; if ifs1, ifs2; 
Select <c1, n1, ifs1, ifs2> such that Follows*(ifs1, c1) such that Parent(ifs1, ifs2) such that Parent(ifs2, n1)

5000
39 - 
stmt s1; while w1; call c1; if ifs1; 
Select <s1, w1, c1, ifs1> such that Follows*(s1, ifs1) such that Parent(s1, c1) such that Next(c1, w1)

5000
40 - 
assign a1; stmt s1; call c1; if ifs1; 
Select <a1, s1, c1, ifs1> such that Follows*(a1, s1) such that Parent*(a1, c1) such that Next(c1, ifs1)

5000
41 - 
stmt s1, s2; variable v1; call c1; 
Select <s1, s2, v1, c1> such that Follows*(s1, s2) such that Uses(s2, v1) such that Next*(s2, c1)

5000
42 - 
stmt s1, s2; variable v1; constant ct1; 
Select <s1, s2, v1, ct1> such that Follows*(s1, s2) such that Uses(s2, v1) with s2.stmt# = ct1.value 

5000
43 - 
stmt s1; variable v1; call c1; if ifs1; 
Select <s1, v1, c1, ifs1> such that Follows*(s1, c1) such that Modifies(s1, v1) such that Uses(ifs1, v1)

5000
44 - 
assign a1; variable v1; call c1; prog_line n1; 
Select <a1, v1, c1, n1> such that Follows*(n1, c1) such that Modifies(n1, v1) such that Follows*(c1, a1)

5000
45 - 
while w1; variable v1; if ifs1, ifs2; 
Select <w1, v1, ifs1, ifs2> such that Follows*(ifs1, ifs2) such that Next(ifs2, w1) such that Modifies(ifs2, v1)

5000
46 - 
assign a1; stmt s1; call c1; prog_line n1; 
Select <a1, s1, c1, n1> such that Follows*(s1, a1) such that Next(s1, c1) such that Next*(a1, n1)

5000
47 - 
assign a1, a2; call c1; if ifs1; 
Select <a1, a2, c1, ifs1> such that Follows*(ifs1, a1) such that Next*(ifs1, c1) such that Affects*(a1, a2)

5000
48 - 
assign a1, a2, a3; if ifs1; 
Select <a1, a2, a3, ifs1> such that Follows*(a1, ifs1) such that Affects(a1, a2) such that Next(a2, a3)

5000
49 - 
assign a1, a2; variable v1; prog_line n1; 
Select <a1, a2, v1, n1> such that Follows*(a1, n1) such that Affects(a1, a2) such that Uses(n1, v1)

5000
50 - 
assign a1, a2; stmt s1; if ifs1; 
Select <a1, a2, s1, ifs1> such that Follows*(a1, s1) such that Affects*(a1, a2) such that Follows*(a2, ifs1)

5000
51 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Follows*(a1, c1) such that Affects*(a1, a2) with c1.procName = v1.varName 

5000
52 - 
assign a1, a2; call c1; if ifs1; 
Select <a1, a2, c1, ifs1> such that Follows*(a1, c1) such that Affects*(a1, a2) such that Follows*(a2, ifs1)

5000
53 - 
while w1, w2; variable v1; call c1; 
Select <w1, w2, v1, c1> such that Follows*(w1, c1) pattern w1(v1, _) such that Parent*(w2, c1)

5000
54 - 
while w1; variable v1, v2; if ifs1; 
Select <w1, v1, v2, ifs1> such that Follows*(w1, ifs1) pattern w1(v1, _) with v1.varName = v2.varName 

5000
55 - 
assign a1, a2; call c1, c2; 
Select <a1, a2, c1, c2> such that Follows*(c1, a1) with c1.procName = c2.procName such that Follows*(c2, a2)

5000
56 - 
while w1; call c1, c2, c3; 
Select <c1, c2, c3> such that Follows*(c1, c2) with c2.procName = c3.procName such that Follows(c3, w1)

5000
57 - 
stmt s1; while w1; if ifs1; constant ct1; 
Select <s1, w1, ifs1, ct1> such that Follows*(ifs1, s1) with ifs1.stmt# = ct1.value such that Follows*(s1, w1)

5000
58 - 
call c1, c2; prog_line n1; constant ct1; 
Select <c1, c2, n1, ct1> such that Follows*(c1, c2) with c2.stmt# = ct1.value such that Next(c2, n1)

5000
59 - 
stmt s1; while w1; call c1; if ifs1; 
Select <s1, w1, c1, ifs1> such that Parent(s1, c1) such that Follows(s1, w1) such that Parent(w1, ifs1)

5000
60 - 
call c1, c2; if ifs1, ifs2; 
Select <c1, c2, ifs1, ifs2> such that Parent(ifs1, c1) such that Follows*(ifs1, ifs2) with c1.procName = c2.procName 

5000
61 - 
assign a1; stmt s1, s2; if ifs1; 
Select <a1, s1, s2, ifs1> such that Parent(ifs1, s1) such that Parent(ifs1, a1) such that Next*(s1, s2)

5000
62 - 
stmt s1, s2; while w1; prog_line n1; 
Select <s1, s2, w1, n1> such that Parent(s1, s2) such that Parent(s2, w1) such that Parent(w1, n1)

5000
63 - 
assign a1, a2; call c1; if ifs1; 
Select <a1, a2, c1, ifs1> such that Parent(ifs1, a1) such that Parent(ifs1, c1) such that Affects*(a1, a2)

5000
64 - 
assign a1; call c1; if ifs1; constant ct1; 
Select <a1, c1, ifs1, ct1> such that Parent(a1, c1) such that Parent*(ifs1, c1) with ifs1.stmt# = ct1.value 

5000
65 - 
assign a1; while w1; call c1, c2; 
Select <a1, w1, c1, c2> such that Parent(a1, c1) such that Parent*(w1, c1) such that Next(w1, c2)

5000
66 - 
assign a1; stmt s1; while w1; variable v1; 
Select <a1, s1, w1, v1> such that Parent(w1, s1) such that Uses(w1, v1) such that Parent(s1, a1)

5000
67 - 
assign a1; while w1; variable v1; prog_line n1; 
Select <a1, w1, v1, n1> such that Parent(a1, n1) such that Uses(a1, v1) such that Parent(n1, w1)

5000
68 - 
variable v1, v2; prog_line n1; if ifs1; 
Select <v1, v2, n1, ifs1> such that Parent(n1, ifs1) such that Uses(n1, v1) with v1.varName = v2.varName 

5000
69 - 
assign a1; stmt s1; call c1; prog_line n1; 
Select <a1, s1, c1, n1> such that Parent(s1, c1) such that Modifies(n1, c1) such that Next*(n1, a1)

5000
70 - 
assign a1; variable v1, v2; prog_line n1; 
Select <a1, v1, v2, n1> such that Parent(a1, n1) such that Modifies(a1, v1) such that Uses(n1, v2)

5000
71 - 
assign a1; stmt s1; prog_line n1; if ifs1; 
Select <a1, s1, n1, ifs1> such that Parent(ifs1, s1) such that Next(ifs1, a1) such that Follows*(s1, n1)

5000
72 - 
assign a1; while w1; prog_line n1; if ifs1; 
Select <a1, w1, n1, ifs1> such that Parent(a1, n1) such that Next(a1, w1) such that Follows(n1, ifs1)

5000
73 - 
call c1; prog_line n1; if ifs1; constant ct1; 
Select <c1, n1, ifs1, ct1> such that Parent(n1, c1) such that Next*(ifs1, c1) with n1.stmt# = ct1.value 

5000
74 - 
assign a1, a2, a3; stmt s1; 
Select <a1, a2, a3, s1> such that Parent(a1, s1) such that Affects(a1, a2) such that Follows*(s1, a3)

5000
75 - 
assign a1, a2; if ifs1; constant ct1; 
Select <a1, a2, ifs1, ct1> such that Parent(a1, ifs1) such that Affects(a1, a2) with ifs1.stmt# = ct1.value 

5000
76 - 
assign a1, a2, a3; prog_line n1; 
Select <a1, a2, a3, n1> such that Parent(a1, n1) such that Affects*(a1, a2) such that Affects*(a2, a3)

5000
77 - 
assign a1, a2; variable v1; prog_line n1; 
Select <a1, a2, v1, n1> such that Parent(a1, n1) such that Affects*(a1, a2) such that Modifies(n1, v1)

5000
78 - 
assign a1, a2; call c1; if ifs1; 
Select <a1, a2, c1, ifs1> such that Parent(a1, c1) such that Affects*(a1, a2) such that Follows*(a2, ifs1)

5000
79 - 
assign a1; while w1, w2; variable v1; 
Select <a1, w1, w2, v1> such that Parent(w1, a1) pattern w1(v1, _) such that Parent*(a1, w2)

5000
80 - 
variable v1; prog_line n1; if ifs1, ifs2; 
Select <v1, n1, ifs1, ifs2> such that Parent(ifs1, n1) pattern ifs1(v1, _, _) such that Parent*(n1, ifs2)

5000
81 - 
while w1; variable v1; prog_line n1; if ifs1; 
Select <w1, v1, n1, ifs1> such that Parent(w1, n1) pattern w1(v1, _) such that Parent(n1, ifs1)

5000
82 - 
while w1; call c1; prog_line n1; constant ct1; 
Select <w1, c1, n1, ct1> such that Parent(w1, c1) with n1.stmt# = c1.procName with n1.stmt# = ct1.value 

5000
83 - 
stmt s1; call c1, c2; if ifs1; 
Select <s1, c1, c2, ifs1> such that Parent(s1, c1) with ifs1.stmt# = c1.procName such that Follows*(ifs1, c2)

5000
84 - 
stmt s1; call c1, c2; if ifs1; 
Select <s1, c1, c2, ifs1> such that Parent(s1, c1) with ifs1.stmt# = c1.procName such that Parent(s1, c2)

5000
85 - 
stmt s1; while w1, w2; constant ct1; 
Select <s1, w1, w2, ct1> such that Parent(w1, s1) with w1.stmt# = ct1.value such that Follows(s1, w2)

5000
86 - 
stmt s1; while w1; if ifs1; constant ct1; 
Select <s1, w1, ifs1, ct1> such that Parent(s1, w1) with s1.stmt# = ct1.value such that Parent*(w1, ifs1)

5000
87 - 
while w1, w2; call c1; prog_line n1; 
Select <w1, w2, c1, n1> such that Parent*(w1, w2) such that Follows(w2, n1) such that Follows*(n1, c1)

5000
88 - 
stmt s1; call c1, c2; if ifs1; 
Select <s1, c1, c2, ifs1> such that Parent*(s1, ifs1) such that Follows(s1, c1) such that Next(ifs1, c2)

5000
89 - 
while w1; call c1; prog_line n1; if ifs1; 
Select <w1, c1, n1, ifs1> such that Parent*(w1, ifs1) such that Follows(w1, c1) such that Follows*(ifs1, n1)

5000
90 - 
stmt s1; while w1; prog_line n1; if ifs1; 
Select <s1, w1, n1, ifs1> such that Parent*(w1, n1) such that Follows*(w1, s1) such that Follows*(s1, ifs1)

5000
91 - 
while w1; prog_line n1, n2; if ifs1; 
Select <w1, n1, n2, ifs1> such that Parent*(w1, n1) such that Parent(w1, ifs1) such that Next(n1, n2)

5000
92 - 
stmt s1; call c1; prog_line n1, n2; 
Select <s1, c1, n1, n2> such that Parent*(n1, c1) such that Parent(n1, n2) such that Follows*(c1, s1)

5000
93 - 
assign a1; while w1; variable v1; prog_line n1; 
Select <a1, w1, v1, n1> such that Parent*(n1, a1) such that Parent*(n1, w1) pattern a1(v1, _)

5000
94 - 
stmt s1; while w1; variable v1; prog_line n1; 
Select <s1, w1, v1, n1> such that Parent*(n1, s1) such that Parent*(n1, w1) such that Uses(s1, v1)

5000
95 - 
while w1; variable v1; call c1; prog_line n1; 
Select <w1, v1, c1, n1> such that Parent*(w1, c1) such that Uses(n1, c1) such that Modifies(w1, v1)

5000
96 - 
assign a1; while w1; variable v1; prog_line n1; 
Select <a1, w1, v1, n1> such that Parent*(w1, a1) such that Uses(w1, v1) such that Follows*(a1, n1)

5000
97 - 
stmt s1; variable v1; prog_line n1; if ifs1; 
Select <s1, v1, n1, ifs1> such that Parent*(n1, s1) such that Uses(n1, v1) such that Parent*(s1, ifs1)

5000
98 - 
assign a1; variable v1; prog_line n1; if ifs1; 
Select <a1, v1, n1, ifs1> such that Parent*(a1, n1) such that Modifies(a1, v1) such that Follows*(n1, ifs1)

5000
99 - 
assign a1; while w1; variable v1; proc p1; 
Select <a1, w1, v1, p1> such that Parent*(a1, w1) such that Modifies(a1, v1) with v1.varName = p1.procName 

5000
100 - 
while w1; variable v1; call c1; prog_line n1; 
Select <w1, v1, c1, n1> such that Parent*(w1, n1) such that Next(w1, c1) such that Uses(c1, v1)

5000
101 - 
prog_line n1; if ifs1, ifs2, ifs3; 
Select <ifs1, ifs2, ifs3> such that Parent*(ifs1, n1) such that Next(ifs1, ifs2) such that Follows*(n1, ifs3)

5000
102 - 
assign a1; stmt s1, s2; prog_line n1; 
Select <a1, s1, s2, n1> such that Parent*(s1, n1) such that Next*(s1, s2) such that Next*(s2, a1)

5000
103 - 
assign a1; stmt s1; while w1; prog_line n1; 
Select <a1, s1, w1, n1> such that Parent*(a1, w1) such that Next*(a1, n1) such that Follows*(w1, s1)

5000
104 - 
assign a1, a2, a3; while w1; 
Select <a1, a2, a3, w1> such that Parent*(a1, w1) such that Affects(a1, a2) such that Affects*(a2, a3)

5000
105 - 
assign a1, a2; call c1; if ifs1; 
Select <a1, a2, c1, ifs1> such that Parent*(a1, c1) such that Affects(a1, a2) such that Next(a2, ifs1)

5000
106 - 
assign a1, a2, a3; stmt s1; 
Select <a1, a2, a3, s1> such that Parent*(a1, s1) such that Affects(a1, a2) such that Affects(a2, a3)

5000
107 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> such that Parent*(a1, w1) such that Affects*(a1, a2) such that Uses(a2, v1)

5000
108 - 
assign a1, a2; stmt s1; if ifs1; 
Select <a1, a2, s1, ifs1> such that Parent*(a1, s1) such that Affects*(a1, a2) such that Parent*(s1, ifs1)

5000
109 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Parent*(a1, s1) such that Affects*(a1, a2) such that Modifies(s1, v1)

5000
110 - 
stmt s1; variable v1, v2; if ifs1; 
Select <s1, v1, v2, ifs1> such that Parent*(ifs1, s1) pattern ifs1(v1, _, _) such that Modifies(s1, v2)

5000
111 - 
assign a1; variable v1; prog_line n1; if ifs1; 
Select <a1, v1, n1, ifs1> such that Parent*(a1, n1) pattern a1(v1, _) pattern ifs1(v1, _, _)

5000
112 - 
stmt s1; while w1; variable v1; constant ct1; 
Select <s1, w1, v1, ct1> such that Parent*(w1, s1) pattern w1(v1, _) with s1.stmt# = ct1.value 

5000
113 - 
stmt s1, s2; while w1; call c1; 
Select <s1, s2, w1, c1> such that Parent*(s1, c1) with w1.stmt# = c1.procName such that Follows(s1, s2)

5000
114 - 
while w1; variable v1; call c1; prog_line n1; 
Select <w1, v1, c1, n1> such that Parent*(n1, c1) with w1.stmt# = c1.procName pattern w1(v1, _)

5000
115 - 
assign a1; call c1; prog_line n1, n2; 
Select <a1, c1, n1, n2> such that Parent*(n1, c1) with a1.stmt# = c1.procName such that Follows*(n1, n2)

5000
116 - 
stmt s1; while w1; constant ct1, ct2; 
Select <s1, w1, ct1, ct2> such that Parent*(w1, s1) with w1.stmt# = ct1.value with s1.stmt# = ct2.value 

5000
117 - 
while w1; call c1; prog_line n1; constant ct1; 
Select <w1, c1, n1, ct1> such that Parent*(w1, n1) with w1.stmt# = ct1.value such that Follows(n1, c1)

5000
118 - 
stmt s1; variable v1; prog_line n1; constant ct1; 
Select <s1, v1, n1, ct1> such that Parent*(s1, n1) with s1.stmt# = ct1.value such that Uses(n1, v1)

5000
119 - 
variable v1; call c1; prog_line n1; if ifs1; 
Select <v1, c1, n1, ifs1> such that Uses(ifs1, v1) such that Follows(ifs1, n1) such that Follows(n1, c1)

5000
120 - 
stmt s1; variable v1; if ifs1; constant ct1; 
Select <s1, v1, ifs1, ct1> such that Uses(ifs1, v1) such that Follows(ifs1, s1) with s1.stmt# = ct1.value 

5000
121 - 
assign a1; while w1, w2; variable v1; 
Select <a1, w1, w2, v1> such that Uses(a1, v1) such that Follows*(a1, w1) pattern w2(v1, _)

5000
122 - 
stmt s1; while w1, w2; variable v1; 
Select <s1, w1, w2, v1> such that Uses(s1, v1) such that Follows*(s1, w1) pattern w2(v1, _)

5000
123 - 
assign a1; variable v1; call c1, c2; 
Select <a1, v1, c1, c2> such that Uses(c1, v1) such that Parent(c1, c2) such that Follows*(c2, a1)

5000
124 - 
assign a1; while w1; variable v1, v2; 
Select <a1, w1, v1, v2> such that Uses(a1, v1) such that Parent(a1, w1) such that Uses(w1, v2)

5000
125 - 
while w1, w2; variable v1; if ifs1; 
Select <w1, w2, v1, ifs1> such that Uses(w1, v1) such that Parent*(w1, w2) such that Modifies(ifs1, v2)

5000
126 - 
while w1; variable v1; call c1; prog_line n1; 
Select <w1, v1, c1, n1> such that Uses(n1, v1) such that Parent*(n1, c1) pattern w1(v1, _)

5000
127 - 
while w1; variable v1, v2; if ifs1; 
Select <w1, v1, v2, ifs1> such that Uses(w1, v1) such that Uses(w1, v2) pattern ifs1(v2, _, _)

5000
128 - 
variable v1; proc p1, p2; if ifs1; 
Select <v1, p1, p2, ifs1> such that Uses(p1, v1) such that Calls(p1, p2) pattern ifs1(v2, _, _)

5000
129 - 
assign a1; variable v1; call c1; if ifs1; 
Select <a1, v1, c1, ifs1> such that Uses(a1, v1) such that Next(a1, c1) such that Next(c1, ifs1)

5000
130 - 
stmt s1, s2; variable v1; if ifs1; 
Select <s1, s2, v1, ifs1> such that Uses(ifs1, v1) such that Next(ifs1, s1) such that Next(s1, s2)

5000
131 - 
variable v1; prog_line n1; if ifs1; constant ct1; 
Select <v1, n1, ifs1, ct1> such that Uses(ifs1, v1) such that Next(ifs1, n1) with n1.stmt# = ct1.value 

5000
132 - 
while w1, w2; variable v1; prog_line n1; 
Select <w1, w2, v1, n1> such that Uses(w1, v1) such that Next*(w1, n1) such that Next(n1, w2)

5000
133 - 
variable v1; call c1; proc p1; prog_line n1; 
Select <v1, c1, p1, n1> such that Uses(n1, v1) such that Next*(n1, c1) with v1.varName = p1.procName 

5000
134 - 
while w1; variable v1; prog_line n1; if ifs1; 
Select <w1, v1, n1, ifs1> such that Uses(ifs1, v1) such that Next*(ifs1, n1) such that Next*(n1, w1)

5000
135 - 
assign a1, a2; variable v1; constant ct1; 
Select <a1, a2, v1, ct1> such that Uses(a1, v1) such that Affects(a1, a2) with a2.stmt# = ct1.value 

5000
136 - 
assign a1, a2, a3; variable v1; 
Select <a1, a2, a3, v1> such that Uses(a1, v1) such that Affects(a1, a2) such that Affects*(a2, a3)

5000
137 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Uses(a1, v1) such that Affects*(a1, a2) such that Parent(a2, s1)

5000
138 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Uses(a1, v1) such that Affects*(a1, a2) with v1.varName = c1.procName 

5000
139 - 
stmt s1; variable v1, v2; if ifs1; 
Select <s1, v1, v2, ifs1> such that Uses(ifs1, v1) pattern s1(v1, _) such that Uses(ifs1, v2)

5000
140 - 
assign a1; variable v1, v2; call c1; 
Select <a1, v1, v2, c1> such that Uses(a1, v1) pattern a1(v2, _) such that Uses(c1, v2)

5000
141 - 
variable v1; proc p1, p2, p3; 
Select <p1, p2, p3> such that Uses(p1, v1) with p1.procName = p2.procName such that Calls(p2, p3)

5000
142 - 
assign a1, a2; variable v1; constant ct1; 
Select <a1, a2, v1, ct1> such that Uses(a1, v1) with a1.stmt# = ct1.value pattern a2(v1, _)

5000
143 - 
stmt s1; while w1; variable v1; constant ct1; 
Select <s1, w1, v1, ct1> such that Uses(s1, v1) with s1.stmt# = ct1.value such that Modifies(w1, v1)

5000
144 - 
variable v1; call c1; if ifs1; constant ct1; 
Select <v1, c1, ifs1, ct1> such that Uses(ifs1, v1) with ifs1.stmt# = ct1.value with c1.stmt# = ct1.value 

5000
145 - 
while w1; variable v1; prog_line n1; if ifs1; 
Select <w1, v1, n1, ifs1> such that Modifies(ifs1, v1) such that Follows(ifs1, n1) pattern w1(v1, _)

5000
146 - 
assign a1; stmt s1; variable v1; if ifs1; 
Select <a1, s1, v1, ifs1> such that Modifies(ifs1, v1) such that Follows(ifs1, s1) such that Parent(s1, a1)

5000
147 - 
assign a1; variable v1; prog_line n1; if ifs1; 
Select <a1, v1, n1, ifs1> such that Modifies(a1, v1) such that Follows(a1, ifs1) such that Modifies(n1, v1)

5000
148 - 
while w1; variable v1, v2; call c1; 
Select <w1, v1, v2, c1> such that Modifies(c1, v1) such that Follows*(c1, w1) such that Modifies(w1, v2)

5000
149 - 
variable v1, v2; call c1; if ifs1; 
Select <v1, v2, c1, ifs1> such that Modifies(c1, v1) such that Follows*(c1, ifs1) pattern ifs1(v2, _, _)

5000
150 - 
variable v1, v2; call c1; if ifs1; 
Select <v1, v2, c1, ifs1> such that Modifies(c1, v1) such that Parent(c1, ifs1) such that Modifies(ifs1, v2)

5000
151 - 
stmt s1; while w1; variable v1; constant ct1; 
Select <s1, w1, v1, ct1> such that Modifies(s1, v1) such that Parent(s1, w1) with w1.stmt# = ct1.value 

5000
152 - 
stmt s1; variable v1; call c1; prog_line n1; 
Select <s1, v1, c1, n1> such that Modifies(n1, v1) such that Parent*(n1, s1) with v1.varName = c1.procName 

5000
153 - 
variable v1, v2; prog_line n1, n2; 
Select <v1, v2, n1, n2> such that Modifies(n1, v1) such that Parent*(n1, n2) with v1.varName = v2.varName 

5000
154 - 
variable v1; call c1; if ifs1, ifs2; 
Select <v1, c1, ifs1, ifs2> such that Modifies(ifs1, v1) such that Parent*(ifs1, ifs2) such that Follows(ifs2, c1)

5000
155 - 
assign a1; while w1; variable v1, v2; 
Select <a1, w1, v1, v2> such that Modifies(a1, v1) such that Uses(a1, v2) pattern w1(v2, _)

5000
156 - 
stmt s1, s2; variable v1, v2; 
Select <s1, s2, v1, v2> such that Modifies(s1, v1) such that Uses(s1, v2) such that Uses(s2, v2)

5000
157 - 
assign a1; variable v1, v2; proc p1; 
Select <a1, v1, v2, p1> such that Modifies(p1, v1) such that Modifies(p1, v2) pattern a1(v2, _)

5000
158 - 
variable v1, v2; call c1; proc p1; 
Select <v1, v2, c1, p1> such that Modifies(p1, v1) such that Modifies(p1, v2) with v2.varName = c1.procName 

5000
159 - 
variable v1; proc p1, p2, p3; 
Select <p1, p2, p3> such that Modifies(p1, v1) such that Calls(p1, p2) with v1.varName = p3.procName 

5000
160 - 
variable v1, v2; proc p1, p2; 
Select <v1, v2, p1, p2> such that Modifies(p1, v1) such that Calls(p1, p2) such that Uses(p2, v2)

5000
161 - 
variable v1; proc p1, p2, p3; 
Select <p1, p2, p3> such that Modifies(p1, v1) such that Calls*(p1, p2) such that Calls(p2, p3)

5000
162 - 
variable v1; call c1; if ifs1, ifs2; 
Select <v1, c1, ifs1, ifs2> such that Modifies(c1, v1) such that Next(c1, ifs1) such that Next*(ifs1, ifs2)

5000
163 - 
variable v1; call c1, c2; if ifs1; 
Select <v1, c1, c2, ifs1> such that Modifies(c1, v1) such that Next(c1, ifs1) such that Follows(ifs1, c2)

5000
164 - 
assign a1; stmt s1; variable v1, v2; 
Select <a1, s1, v1, v2> such that Modifies(a1, v1) such that Next(a1, s1) such that Modifies(s1, v2)

5000
165 - 
variable v1; prog_line n1; if ifs1; constant ct1; 
Select <v1, n1, ifs1, ct1> such that Modifies(ifs1, v1) such that Next*(ifs1, n1) with n1.stmt# = ct1.value 

5000
166 - 
assign a1; variable v1; prog_line n1; if ifs1; 
Select <a1, v1, n1, ifs1> such that Modifies(n1, v1) such that Next*(n1, ifs1) such that Next(ifs1, a1)

5000
167 - 
variable v1; prog_line n1; if ifs1; constant ct1; 
Select <v1, n1, ifs1, ct1> such that Modifies(ifs1, v1) such that Next*(ifs1, n1) with n1.stmt# = ct1.value 

5000
168 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Modifies(a1, v1) such that Affects(a1, a2) such that Next*(a2, s1)

5000
169 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Modifies(a1, v1) such that Affects(a1, a2) such that Next(a2, c1)

5000
170 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Modifies(a1, v1) such that Affects(a1, a2) such that Modifies(s1, v2)

5000
171 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Modifies(a1, v1) such that Affects*(a1, a2) such that Modifies(c1, v2)

5000
172 - 
assign a1, a2; variable v1; if ifs1; 
Select <a1, a2, v1, ifs1> such that Modifies(a1, v1) such that Affects*(a1, a2) such that Next(a2, ifs1)

5000
173 - 
stmt s1; while w1; variable v1; if ifs1; 
Select <s1, w1, v1, ifs1> such that Modifies(ifs1, v1) pattern s1(v1, _) such that Parent(ifs1, w1)

5000
174 - 
stmt s1; while w1; variable v1, v2; 
Select <s1, w1, v1, v2> such that Modifies(w1, v1) with s1.stmt# = v1.varName such that Modifies(s1, v2)

5000
175 - 
assign a1; variable v1; call c1; proc p1; 
Select <a1, v1, c1, p1> such that Modifies(p1, v1) with p1.procName = c1.procName pattern a1(v1, _)

5000
176 - 
while w1; variable v1; if ifs1; constant ct1; 
Select <w1, v1, ifs1, ct1> such that Modifies(w1, v1) with w1.stmt# = ct1.value pattern ifs1(v1, _, _)

5000
177 - 
variable v1; proc p1, p2, p3; 
Select <p1, p2, p3> such that Calls(p1, p2) such that Uses(p2, v1) such that Calls(p2, p3)

5000
178 - 
variable v1, v2; proc p1, p2; 
Select <v1, v2, p1, p2> such that Calls(p1, p2) such that Uses(p2, v1) such that Modifies(p2, v2)

5000
179 - 
variable v1; proc p1, p2; prog_line n1; 
Select <v1, p1, p2, n1> such that Calls(p1, p2) such that Uses(p2, v1) such that Uses(n1, v1)

5000
180 - 
variable v1, v2; proc p1, p2; 
Select <v1, v2, p1, p2> such that Calls(p1, p2) such that Modifies(p2, v1) such that Modifies(p2, v2)

5000
181 - 
assign a1; variable v1; proc p1, p2; 
Select <a1, v1, p1, p2> such that Calls(p1, p2) such that Modifies(p2, v1) such that Modifies(a1, v1)

5000
182 - 
proc p1, p2, p3; 
Select <p1, p2, p3, p4> such that Calls(p1, p2) such that Calls(p2, p3) such that Calls*(p3, p4)

5000
183 - 
variable v1; proc p1, p2, p3; 
Select <p1, p2, p3> such that Calls(p1, p2) such that Calls*(p2, p3) such that Uses(p3, v1)

5000
184 - 
variable v1; proc p1, p2, p3; 
Select <p1, p2, p3> such that Calls(p1, p2) such that Calls*(p2, p3) such that Modifies(p3, v1)

5000
185 - 
variable v1; proc p1, p2, p3; 
Select <p1, p2, p3> such that Calls(p1, p2) with p2.procName = p3.procName such that Modifies(p3, v1)

5000
186 - 
assign a1; variable v1; proc p1, p2; 
Select <a1, v1, p1, p2> such that Calls*(p1, p2) such that Modifies(p2, v1) pattern a1(v1, _)

5000
187 - 
proc p1, p2, p3; 
Select <p1, p2, p3, p4> such that Calls*(p1, p2) such that Calls(p2, p3) such that Calls*(p3, p4)

5000
188 - 
proc p1, p2, p3; 
Select <p1, p2, p3, p4> such that Calls*(p1, p2) with p2.procName = p3.procName such that Calls(p3, p4)

5000
189 - 
assign a1; stmt s1; variable v1; prog_line n1; 
Select <a1, s1, v1, n1> such that Next(s1, a1) such that Follows(s1, n1) pattern a1(v1, _)

5000
190 - 
assign a1; prog_line n1, n2; constant ct1; 
Select <a1, n1, n2, ct1> such that Next(n1, n2) such that Follows(n2, a1) with n2.stmt# = ct1.value 

5000
191 - 
variable v1; call c1, c2; if ifs1; 
Select <v1, c1, c2, ifs1> such that Next(c1, ifs1) such that Follows*(c1, c2) such that Modifies(ifs1, v1)

5000
192 - 
stmt s1; while w1; call c1; prog_line n1; 
Select <s1, w1, c1, n1> such that Next(w1, c1) such that Follows*(w1, s1) such that Parent*(s1, n1)

5000
193 - 
while w1; call c1; if ifs1; constant ct1; 
Select <w1, c1, ifs1, ct1> such that Next(c1, w1) such that Follows*(c1, ifs1) with ifs1.stmt# = ct1.value 

5000
194 - 
call c1, c2; prog_line n1; if ifs1; 
Select <c1, c2, n1, ifs1> such that Next(n1, ifs1) such that Parent(n1, c1) such that Next(c1, c2)

5000
195 - 
assign a1; stmt s1; while w1; call c1; 
Select <a1, s1, w1, c1> such that Next(w1, a1) such that Parent(w1, s1) such that Parent(s1, c1)

5000
196 - 
assign a1; prog_line n1; if ifs1; constant ct1; 
Select <a1, n1, ifs1, ct1> such that Next(n1, ifs1) such that Parent*(n1, a1) with a1.stmt# = ct1.value 

5000
197 - 
stmt s1, s2; prog_line n1, n2; 
Select <s1, s2, n1, n2> such that Next(s1, s2) such that Parent*(s2, n1) such that Parent(s2, n2)

5000
198 - 
stmt s1; variable v1; prog_line n1; constant ct1; 
Select <s1, v1, n1, ct1> such that Next(n1, s1) such that Uses(n1, v1) with s1.stmt# = ct1.value 

5000
199 - 
stmt s1; variable v1; call c1; prog_line n1; 
Select <s1, v1, c1, n1> such that Next(c1, s1) such that Uses(c1, v1) such that Modifies(n1, v1)

5000
200 - 
while w1; variable v1; proc p1; if ifs1; 
Select <w1, v1, p1, ifs1> such that Next(ifs1, w1) such that Uses(ifs1, v1) such that Modifies(p1, v1)

5000
201 - 
variable v1, v2; call c1; if ifs1; 
Select <v1, v2, c1, ifs1> such that Next(ifs1, c1) such that Modifies(ifs1, v1) such that Modifies(c1, v2)

5000
202 - 
while w1; variable v1; call c1; prog_line n1; 
Select <w1, v1, c1, n1> such that Next(c1, w1) such that Modifies(c1, v1) such that Next*(w1, n1)

5000
203 - 
assign a1; variable v1; call c1; prog_line n1; 
Select <a1, v1, c1, n1> such that Next(n1, a1) such that Next(n1, c1) pattern a1(v1, _)

5000
204 - 
stmt s1, s2; variable v1; call c1; 
Select <s1, s2, v1, c1> such that Next(s1, c1) such that Next(s1, s2) such that Uses(c1, v1)

5000
205 - 
assign a1; stmt s1; variable v1; prog_line n1; 
Select <a1, s1, v1, n1> such that Next(a1, s1) such that Next*(a1, n1) such that Uses(n1, v1)

5000
206 - 
assign a1; while w1, w2; call c1; 
Select <a1, w1, w2, c1> such that Next(w1, c1) such that Next*(w1, a1) such that Parent*(w2, c1)

5000
207 - 
assign a1, a2, a3; variable v1; 
Select <a1, a2, a3, v1> such that Next(a1, a2) such that Affects(a2, a3) pattern a3(v1, _)

5000
208 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> such that Next(a1, w1) such that Affects(a1, a2) pattern a2(v1, _)

5000
209 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Next(a1, c1) such that Affects*(a1, a2) such that Uses(c1, v1)

5000
210 - 
while w1; variable v1; if ifs1, ifs2; 
Select <w1, v1, ifs1, ifs2> such that Next(ifs1, w1) pattern ifs1(v1, _, _) such that Uses(ifs2, v1)

5000
211 - 
assign a1; while w1; variable v1; call c1; 
Select <a1, w1, v1, c1> such that Next(a1, c1) pattern a1(v1, _) such that Next*(c1, w1)

5000
212 - 
while w1; variable v1; call c1; if ifs1; 
Select <w1, v1, c1, ifs1> such that Next(ifs1, c1) pattern ifs1(v1, _, _) such that Next(c1, w1)

5000
213 - 
assign a1, a2; call c1, c2; 
Select <a1, a2, c1, c2> such that Next(c1, a1) with c1.procName = c2.procName such that Affects*(a1, a2)

5000
214 - 
variable v1; call c1, c2; if ifs1; 
Select <v1, c1, c2, ifs1> such that Next(c1, ifs1) with c1.procName = c2.procName pattern ifs1(v1, _, _)

5000
215 - 
stmt s1; while w1; variable v1; constant ct1; 
Select <s1, w1, v1, ct1> such that Next(s1, w1) with s1.stmt# = ct1.value pattern w1(v1, _)

5000
216 - 
while w1; prog_line n1; if ifs1; constant ct1; 
Select <w1, n1, ifs1, ct1> such that Next(n1, ifs1) with n1.stmt# = ct1.value such that Next*(ifs1, w1)

5000
217 - 
assign a1; call c1; prog_line n1; if ifs1; 
Select <a1, c1, n1, ifs1> such that Next*(n1, c1) such that Follows(n1, a1) such that Follows*(c1, ifs1)

5000
218 - 
stmt s1; variable v1; prog_line n1; if ifs1; 
Select <s1, v1, n1, ifs1> such that Next*(ifs1, n1) such that Follows*(ifs1, s1) such that Modifies(n1, v1)

5000
219 - 
assign a1; stmt s1, s2; call c1; 
Select <a1, s1, s2, c1> such that Next*(c1, a1) such that Follows*(c1, s1) such that Next(a1, s2)

5000
220 - 
while w1; variable v1; call c1; prog_line n1; 
Select <w1, v1, c1, n1> such that Next*(c1, w1) such that Parent(c1, n1) pattern w1(v1, _)

5000
221 - 
assign a1; stmt s1; variable v1; prog_line n1; 
Select <a1, s1, v1, n1> such that Next*(n1, a1) such that Parent(n1, s1) pattern a1(v1, _)

5000
222 - 
stmt s1; while w1; variable v1; prog_line n1; 
Select <s1, w1, v1, n1> such that Next*(s1, w1) such that Parent*(s1, n1) such that Modifies(n1, v1)

5000
223 - 
while w1, w2; prog_line n1; if ifs1; 
Select <w1, w2, n1, ifs1> such that Next*(w1, ifs1) such that Parent*(w1, w2) such that Follows(w2, n1)

5000
224 - 
assign a1, a2; while w1; call c1; 
Select <a1, a2, w1, c1> such that Next*(a1, c1) such that Parent*(a1, w1) such that Parent*(a2, c1)

5000
225 - 
assign a1; variable v1; proc p1; if ifs1; 
Select <a1, v1, p1, ifs1> such that Next*(a1, ifs1) such that Uses(a1, v1) with v1.varName = p1.procName 

5000
226 - 
stmt s1; variable v1; call c1; prog_line n1; 
Select <s1, v1, c1, n1> such that Next*(s1, n1) such that Modifies(s1, v1) such that Uses(c1, v1)

5000
227 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> such that Next*(a1, a2) such that Modifies(a2, v1) such that Uses(w1, v1)

5000
228 - 
assign a1; prog_line n1, n2; constant ct1; 
Select <a1, n1, n2, ct1> such that Next*(n1, n2) such that Next(n2, a1) with a1.stmt# = ct1.value 

5000
229 - 
assign a1; while w1; if ifs1, ifs2; 
Select <a1, w1, ifs1, ifs2> such that Next*(a1, ifs1) such that Next(a1, w1) such that Follows*(ifs1, ifs2)

5000
230 - 
while w1; prog_line n1, n2; if ifs1; 
Select <w1, n1, n2, ifs1> such that Next*(n1, ifs1) such that Next*(n1, n2) such that Next(ifs1, w1)

5000
231 - 
call c1; prog_line n1, n2; if ifs1; 
Select <c1, n1, n2, ifs1> such that Next*(n1, c1) such that Next*(n1, ifs1) such that Next(ifs1, n2)

5000
232 - 
assign a1, a2, a3; call c1; 
Select <a1, a2, a3, c1> such that Next*(a1, a2) such that Affects(a2, a3) such that Next(a3, c1)

5000
233 - 
assign a1, a2, a3; constant ct1; 
Select <a1, a2, a3, ct1> such that Next*(a1, a2) such that Affects(a2, a3) with a3.stmt# = ct1.value 

5000
234 - 
assign a1, a2; call c1; constant ct1; 
Select <a1, a2, c1, ct1> such that Next*(a1, c1) such that Affects*(a1, a2) with a2.stmt# = ct1.value 

5000
235 - 
assign a1, a2, a3; prog_line n1; 
Select <a1, a2, a3, n1> such that Next*(a1, n1) such that Affects*(a1, a2) such that Follows(n1, a3)

5000
236 - 
assign a1, a2; stmt s1; prog_line n1; 
Select <a1, a2, s1, n1> such that Next*(a1, n1) such that Affects*(a1, a2) such that Next(n1, s1)

5000
237 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Next*(a1, a2) pattern a2(v1, _) such that Follows*(a2, s1)

5000
238 - 
assign a1; variable v1; call c1; proc p1; 
Select <a1, v1, c1, p1> such that Next*(c1, a1) with c1.procName = p1.procName such that Modifies(a1, v1)

5000
239 - 
stmt s1; prog_line n1, n2; constant ct1; 
Select <s1, n1, n2, ct1> such that Next*(n1, n2) with n2.stmt# = ct1.value such that Follows(n2, s1)

5000
240 - 
assign a1, a2; stmt s1; while w1; 
Select <a1, a2, s1, w1> such that Affects(a1, a2) such that Follows(a2, w1) such that Follows*(a2, s1)

5000
241 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Affects(a1, a2) such that Follows(a2, s1) such that Uses(s1, v1)

5000
242 - 
assign a1, a2, a3; call c1; 
Select <a1, a2, a3, c1> such that Affects(a1, a2) such that Follows*(a2, c1) such that Next*(c1, a3)

5000
243 - 
assign a1, a2; call c1; if ifs1; 
Select <a1, a2, c1, ifs1> such that Affects(a1, a2) such that Follows*(a2, ifs1) such that Parent*(a2, c1)

5000
244 - 
assign a1, a2; while w1; constant ct1; 
Select <a1, a2, w1, ct1> such that Affects(a1, a2) such that Parent(a2, w1) with a2.stmt# = ct1.value 

5000
245 - 
assign a1, a2, a3; if ifs1; 
Select <a1, a2, a3, ifs1> such that Affects(a1, a2) such that Parent(a2, ifs1) such that Affects*(a2, a3)

5000
246 - 
assign a1, a2, a3; while w1; 
Select <a1, a2, a3, w1> such that Affects(a1, a2) such that Parent*(a2, w1) such that Affects(a2, a3)

5000
247 - 
assign a1, a2; stmt s1; prog_line n1; 
Select <a1, a2, s1, n1> such that Affects(a1, a2) such that Parent*(a2, n1) such that Next(a2, s1)

5000
248 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Affects(a1, a2) such that Parent*(a2, c1) pattern a2(v1, _)

5000
249 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> such that Affects(a1, a2) such that Uses(a2, v1) such that Parent(a2, w1)

5000
250 - 
assign a1, a2; variable v1; prog_line n1; 
Select <a1, a2, v1, n1> such that Affects(a1, a2) such that Uses(a2, v1) such that Uses(n1, v1)

5000
251 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Affects(a1, a2) such that Uses(a2, v1) such that Follows(a2, s1)

5000
252 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> such that Affects(a1, a2) such that Modifies(a2, v1) such that Follows*(a2, w1)

5000
253 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Affects(a1, a2) such that Modifies(a2, v1) such that Parent*(a2, c1)

5000
254 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> such that Affects(a1, a2) such that Next(a2, w1) such that Modifies(a2, v1)

5000
255 - 
assign a1, a2, a3; while w1; 
Select <a1, a2, a3, w1> such that Affects(a1, a2) such that Next(a2, w1) such that Next*(w1, a3)

5000
256 - 
assign a1, a2, a3; stmt s1; 
Select <a1, a2, a3, s1> such that Affects(a1, a2) such that Next*(a2, s1) such that Affects(a2, a3)

5000
257 - 
assign a1, a2; if ifs1; constant ct1; 
Select <a1, a2, ifs1, ct1> such that Affects(a1, a2) such that Next*(a2, ifs1) with a2.stmt# = ct1.value 

5000
258 - 
assign a1, a2; stmt s1; while w1; 
Select <a1, a2, s1, w1> such that Affects(a1, a2) such that Next*(a2, w1) such that Parent*(a2, s1)

5000
259 - 
assign a1, a2, a3; constant ct1; 
Select <a1, a2, a3, ct1> such that Affects(a1, a2) such that Affects(a2, a3) with a3.stmt# = ct1.value 

5000
260 - 
assign a1, a2, a3; variable v1; 
Select <a1, a2, a3, v1> such that Affects(a1, a2) such that Affects(a2, a3) such that Uses(a3, v1)

5000
261 - 
assign a1, a2, a3; prog_line n1; 
Select <a1, a2, a3, n1> such that Affects(a1, a2) such that Affects*(a2, a3) such that Next*(a3, n1)

5000
262 - 
assign a1, a2, a3; variable v1; 
Select <a1, a2, a3, v1> such that Affects(a1, a2) such that Affects*(a2, a3) such that Modifies(a3, v1)

5000
263 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Affects(a1, a2) pattern a2(v1, _) such that Parent(a2, c1)

5000
264 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> such that Affects(a1, a2) pattern a2(v1, _) such that Uses(w1, v1)

5000
265 - 
assign a1, a2; variable v1; prog_line n1; 
Select <a1, a2, v1, n1> such that Affects(a1, a2) pattern a2(v1, _) such that Follows(a2, n1)

5000
266 - 
assign a1, a2; stmt s1; constant ct1; 
Select <a1, a2, s1, ct1> such that Affects(a1, a2) with a2.stmt# = ct1.value such that Parent(a2, s1)

5000
267 - 
assign a1, a2, a3; constant ct1; 
Select <a1, a2, a3, ct1> such that Affects(a1, a2) with a2.stmt# = ct1.value such that Parent(a2, a3)

5000
268 - 
assign a1, a2; if ifs1; constant ct1; 
Select <a1, a2, ifs1, ct1> such that Affects(a1, a2) with a2.stmt# = ct1.value with ifs1.stmt# = ct1.value 

5000
269 - 
assign a1, a2; while w1; prog_line n1; 
Select <a1, a2, w1, n1> such that Affects*(a1, a2) such that Follows(a2, w1) such that Follows(w1, n1)

5000
270 - 
assign a1, a2, a3; stmt s1; 
Select <a1, a2, a3, s1> such that Affects*(a1, a2) such that Follows(a2, s1) such that Affects*(a2, a3)

5000
271 - 
assign a1, a2, a3; while w1; 
Select <a1, a2, a3, w1> such that Affects*(a1, a2) such that Follows(a2, w1) such that Affects*(a2, a3)

5000
272 - 
assign a1, a2; call c1, c2; 
Select <a1, a2, c1, c2> such that Affects*(a1, a2) such that Follows*(a2, c1) such that Follows(a2, c2)

5000
273 - 
assign a1, a2; variable v1; if ifs1; 
Select <a1, a2, v1, ifs1> such that Affects*(a1, a2) such that Parent(a2, ifs1) pattern a2(v1, _)

5000
274 - 
assign a1, a2; while w1; if ifs1; 
Select <a1, a2, w1, ifs1> such that Affects*(a1, a2) such that Parent(a2, ifs1) such that Parent*(a2, w1)

5000
275 - 
assign a1, a2; call c1; constant ct1; 
Select <a1, a2, c1, ct1> such that Affects*(a1, a2) such that Parent(a2, c1) with a2.stmt# = ct1.value 

5000
276 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> such that Affects*(a1, a2) such that Parent*(a2, w1) pattern a2(v1, _)

5000
277 - 
assign a1, a2; call c1; if ifs1; 
Select <a1, a2, c1, ifs1> such that Affects*(a1, a2) such that Parent*(a2, c1) such that Follows*(c1, ifs1)

5000
278 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Affects*(a1, a2) such that Uses(a2, v1) such that Follows(a2, s1)

5000
279 - 
assign a1, a2, a3; variable v1; 
Select <a1, a2, a3, v1> such that Affects*(a1, a2) such that Uses(a2, v1) such that Parent*(a2, a3)

5000
280 - 
assign a1, a2; variable v1; proc p1; 
Select <a1, a2, v1, p1> such that Affects*(a1, a2) such that Modifies(a2, v1) such that Modifies(p1, v1)

5000
281 - 
assign a1, a2; variable v1, v2; 
Select <a1, a2, v1, v2> such that Affects*(a1, a2) such that Modifies(a2, v1) pattern a2(v2, _)

5000
282 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Affects*(a1, a2) such that Next(a2, c1) pattern a2(v1, _)

5000
283 - 
assign a1, a2, a3; while w1; 
Select <a1, a2, a3, w1> such that Affects*(a1, a2) such that Next(a2, w1) such that Next*(a2, a3)

5000
284 - 
assign a1, a2; while w1; prog_line n1; 
Select <a1, a2, w1, n1> such that Affects*(a1, a2) such that Next(a2, n1) such that Follows*(n1, w1)

5000
285 - 
assign a1, a2; stmt s1, s2; 
Select <a1, a2, s1, s2> such that Affects*(a1, a2) such that Next*(a2, s1) such that Follows(s1, s2)

5000
286 - 
assign a1, a2; stmt s1; while w1; 
Select <a1, a2, s1, w1> such that Affects*(a1, a2) such that Next*(a2, w1) such that Follows(w1, s1)

5000
287 - 
assign a1, a2; variable v1; call c1; 
Select <a1, a2, v1, c1> such that Affects*(a1, a2) such that Next*(a2, c1) such that Uses(a2, v1)

5000
288 - 
assign a1, a2, a3; call c1; 
Select <a1, a2, a3, c1> such that Affects*(a1, a2) such that Affects(a2, a3) such that Next*(a3, c1)

5000
289 - 
assign a1, a2, a3; 
Select <a1, a2, a3, a4> such that Affects*(a1, a2) such that Affects(a2, a3) such that Next*(a3, a4)

5000
290 - 
assign a1, a2, a3; if ifs1; 
Select <a1, a2, a3, ifs1> such that Affects*(a1, a2) such that Affects*(a2, a3) such that Next(a3, ifs1)

5000
291 - 
assign a1, a2, a3; prog_line n1; 
Select <a1, a2, a3, n1> such that Affects*(a1, a2) such that Affects*(a2, a3) such that Next(a3, n1)

5000
292 - 
assign a1, a2, a3; variable v1; 
Select <a1, a2, a3, v1> such that Affects*(a1, a2) pattern a2(v1, _) such that Next*(a2, a3)

5000
293 - 
assign a1, a2; variable v1; constant ct1; 
Select <a1, a2, v1, ct1> such that Affects*(a1, a2) pattern a2(v1, _) with a2.stmt# = ct1.value 

5000
294 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> such that Affects*(a1, a2) pattern a2(v1, _) such that Parent*(a2, s1)

5000
295 - 
assign a1, a2; while w1; constant ct1; 
Select <a1, a2, w1, ct1> such that Affects*(a1, a2) with a2.stmt# = ct1.value such that Parent(a2, w1)

5000
296 - 
assign a1, a2; stmt s1; constant ct1; 
Select <a1, a2, s1, ct1> such that Affects*(a1, a2) with a2.stmt# = ct1.value such that Follows*(a2, s1)

5000
297 - 
assign a1, a2; while w1; constant ct1; 
Select <a1, a2, w1, ct1> such that Affects*(a1, a2) with a2.stmt# = ct1.value such that Parent*(a2, w1)

5000
298 - 
assign a1; stmt s1, s2; variable v1; 
Select <a1, s1, s2, v1> pattern a1(v1, _) such that Follows(a1, s1) such that Uses(s2, v1)

5000
299 - 
while w1; variable v1; prog_line n1, n2; 
Select <w1, v1, n1, n2> pattern w1(v1, _) such that Follows(w1, n1) such that Next*(n1, n2)

5000
300 - 
stmt s1; while w1; variable v1; if ifs1; 
Select <s1, w1, v1, ifs1> pattern w1(v1, _) such that Follows*(w1, ifs1) such that Parent(ifs1, s1)

5000
301 - 
assign a1; variable v1; call c1; constant ct1; 
Select <a1, v1, c1, ct1> pattern a1(v1, _) such that Parent(a1, c1) with c1.stmt# = ct1.value 

5000
302 - 
assign a1; variable v1; call c1; prog_line n1; 
Select <a1, v1, c1, n1> pattern a1(v1, _) such that Parent(a1, c1) such that Next*(c1, n1)

5000
303 - 
while w1, w2; variable v1; call c1; 
Select <w1, w2, v1, c1> pattern w1(v1, _) such that Parent(w1, c1) such that Parent*(w2, c1)

5000
304 - 
assign a1; while w1; variable v1; if ifs1; 
Select <a1, w1, v1, ifs1> pattern a1(v1, _) such that Parent*(a1, ifs1) pattern w1(v1, _)

5000
305 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> pattern w1(v1, _) such that Modifies(a1, v1) such that Parent*(w1, a2)

5000
306 - 
while w1, w2; variable v1; if ifs1; 
Select <w1, w2, v1, ifs1> pattern w1(v1, _) such that Next(w1, ifs1) such that Uses(w2, v1)

5000
307 - 
stmt s1; while w1; variable v1; constant ct1; 
Select <s1, w1, v1, ct1> pattern w1(v1, _) such that Next(w1, s1) with s1.stmt# = ct1.value 

5000
308 - 
assign a1; stmt s1; variable v1; proc p1; 
Select <a1, s1, v1, p1> pattern a1(v1, _) such that Next(a1, s1) such that Modifies(p1, v1)

5000
309 - 
variable v1, v2; if ifs1, ifs2; 
Select <v1, v2, ifs1, ifs2> pattern ifs1(v1, _, _) such that Next*(ifs1, ifs2) with v1.varName = v2.varName 

5000
310 - 
variable v1, v2; if ifs1, ifs2; 
Select <v1, v2, ifs1, ifs2> pattern ifs1(v1, _, _) such that Next*(ifs1, ifs2) such that Uses(ifs2, v2)

5000
311 - 
while w1; variable v1; if ifs1, ifs2; 
Select <w1, v1, ifs1, ifs2> pattern w1(v1, _) such that Next*(w1, ifs1) such that Parent(ifs1, ifs2)

5000
312 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> pattern a1(v1, _) such that Affects(a1, a2) such that Follows(a2, s1)

5000
313 - 
assign a1, a2, a3; variable v1; 
Select <a1, a2, a3, v1> pattern a1(v1, _) such that Affects(a1, a2) such that Affects(a2, a3)

5000
314 - 
assign a1, a2; stmt s1; variable v1; 
Select <a1, a2, s1, v1> pattern a1(v1, _) such that Affects(a1, a2) such that Uses(s1, v2)

5000
315 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> pattern a1(v1, _) such that Affects*(a1, a2) such that Next(a2, w1)

5000
316 - 
assign a1; while w1; variable v1; call c1; 
Select <a1, w1, v1, c1> pattern a1(v1, _) pattern w1(v1, _) such that Follows(w1, c1)

5000
317 - 
assign a1, a2; while w1; variable v1; 
Select <a1, a2, w1, v1> pattern a1(v1, _) pattern w1(v1, _) such that Parent(w1, a2)

5000
318 - 
stmt s1; while w1; variable v1; constant ct1; 
Select <s1, w1, v1, ct1> pattern w1(v1, _) with w1.stmt# = ct1.value such that Modifies(s1, v1)

5000
319 - 
call c1; proc p1, p2; prog_line n1; 
Select <c1, p1, p2, n1> with c1.procName = p1.procName such that Follows(c1, n1) such that Calls*(p1, p2)

5000
320 - 
assign a1; stmt s1; call c1; proc p1; 
Select <a1, s1, c1, p1> with c1.procName = p1.procName such that Follows(c1, s1) such that Next*(s1, a1)

5000
321 - 
variable v1; call c1; proc p1; if ifs1; 
Select <v1, c1, p1, ifs1> with c1.procName = p1.procName such that Follows*(c1, ifs1) such that Uses(p1, v1)

5000
322 - 
stmt s1; call c1; proc p1; prog_line n1; 
Select <s1, c1, p1, n1> with c1.procName = p1.procName such that Parent(c1, n1) such that Next(n1, s1)

5000
323 - 
assign a1; variable v1; call c1, c2; 
Select <a1, v1, c1, c2> with c1.procName = c2.procName such that Parent(c2, a1) with c2.procName = v1.varName 

5000
324 - 
variable v1; call c1; proc p1; prog_line n1; 
Select <v1, c1, p1, n1> with c1.procName = p1.procName such that Parent*(c1, n1) such that Modifies(p1, v1)

5000
325 - 
stmt s1; while w1; variable v1; call c1; 
Select <s1, w1, v1, c1> with c1.procName = v1.varName such that Parent*(c1, w1) such that Follows(w1, s1)

5000
326 - 
assign a1; variable v1; call c1; proc p1; 
Select <a1, v1, c1, p1> with p1.procName = c1.procName such that Uses(p1, v1) pattern a1(v1, _)

5000
327 - 
variable v1, v2; proc p1, p2; 
Select <v1, v2, p1, p2> with p1.procName = v1.varName such that Uses(p1, v2) such that Modifies(p2, v2)

5000
328 - 
variable v1, v2; call c1; proc p1; 
Select <v1, v2, c1, p1> with c1.procName = p1.procName such that Modifies(c1, v1) with v1.varName = v2.varName 

5000
329 - 
proc p1, p2, p3; 
Select <p1, p2, p3, p4> with p1.procName = p2.procName such that Calls(p2, p3) such that Calls(p3, p4)

5000
330 - 
proc p1, p2, p3; 
Select <p1, p2, p3, p4> with p1.procName = p2.procName such that Calls(p2, p3) with p3.procName = p4.procName 

5000
331 - 
while w1; variable v1; proc p1, p2; 
Select <w1, v1, p1, p2> with p1.procName = v1.varName such that Calls*(p1, p2) such that Modifies(w1, v2)

5000
332 - 
variable v1; call c1; prog_line n1; if ifs1; 
Select <v1, c1, n1, ifs1> with c1.procName = v1.varName such that Next(c1, n1) such that Follows*(n1, ifs1)

5000
333 - 
stmt s1; call c1; proc p1, p2; 
Select <s1, c1, p1, p2> with c1.procName = p1.procName such that Next(c1, s1) such that Calls(p1, p2)

5000
334 - 
variable v1; call c1; proc p1; prog_line n1; 
Select <v1, c1, p1, n1> with c1.procName = p1.procName such that Next*(c1, n1) such that Modifies(p1, v1)

5000
335 - 
variable v1; call c1; proc p1; prog_line n1; 
Select <v1, c1, p1, n1> with c1.procName = p1.procName such that Next*(c1, n1) with p1.procName = v1.varName 

5000
336 - 
stmt s1; while w1; variable v1; call c1; 
Select <s1, w1, v1, c1> with c1.procName = v1.varName such that Next*(c1, s1) such that Parent(s1, w1)

5000
337 - 
while w1; variable v1, v2; call c1; 
Select <w1, v1, v2, c1> with v1.varName = c1.procName pattern v1(v2, _) such that Modifies(w1, v2)

5000
338 - 
variable v1, v2, v3; proc p1; 
Select <v1, v2, v3, p1> with v1.varName = p1.procName pattern v1(v2, _) such that Uses(p1, v3)

5000
339 - 
variable v1; call c1; proc p1, p2; 
Select <v1, c1, p1, p2> with p1.procName = c1.procName with p1.procName = v1.varName with v1.varName = p2.procName 

5000
340 - 
variable v1; call c1; proc p1; if ifs1; 
Select <v1, c1, p1, ifs1> with v1.varName = p1.procName with v1.varName = c1.procName such that Parent(ifs1, c1)

5000
341 - 
call c1; proc p1; prog_line n1; constant ct1; 
Select <c1, p1, n1, ct1> with c1.procName = p1.procName with c1.stmt# = ct1.value with n1.stmt# = ct1.value 

5000
342 - 
stmt s1; call c1, c2; constant ct1; 
Select <s1, c1, c2, ct1> with c1.procName = c2.procName with c2.stmt# = ct1.value such that Parent*(s1, c1)

5000
343 - 
stmt s1; variable v1; prog_line n1; constant ct1; 
Select <s1, v1, n1, ct1> with s1.stmt# = ct1.value such that Follows(s1, n1) such that Modifies(n1, v1)

5000
344 - 
stmt s1; while w1; call c1; constant ct1; 
Select <s1, w1, c1, ct1> with w1.stmt# = ct1.value such that Follows(w1, c1) such that Parent*(s1, c1)

5000
345 - 
stmt s1; while w1; call c1; constant ct1; 
Select <s1, w1, c1, ct1> with s1.stmt# = ct1.value such that Follows*(s1, c1) such that Parent(w1, c1)

5000
346 - 
assign a1; call c1; if ifs1; constant ct1; 
Select <a1, c1, ifs1, ct1> with c1.stmt# = ct1.value such that Follows*(c1, ifs1) such that Next(ifs1, a1)

5000
347 - 
stmt s1; call c1; if ifs1; constant ct1; 
Select <s1, c1, ifs1, ct1> with c1.stmt# = ct1.value such that Follows*(c1, ifs1) such that Next*(ifs1, s1)

5000
348 - 
assign a1; variable v1; call c1; constant ct1; 
Select <a1, v1, c1, ct1> with a1.stmt# = ct1.value such that Parent(a1, c1) such that Uses(c1, v1)

5000
349 - 
while w1; variable v1; if ifs1; constant ct1; 
Select <w1, v1, ifs1, ct1> with w1.stmt# = ct1.value such that Parent*(w1, ifs1) pattern ifs1(v1, _, _)

5000
350 - 
while w1; variable v1; if ifs1; constant ct1; 
Select <w1, v1, ifs1, ct1> with w1.stmt# = ct1.value such that Parent*(w1, ifs1) pattern ifs1(v1, _, _)

5000
351 - 
assign a1; stmt s1; call c1; constant ct1; 
Select <a1, s1, c1, ct1> with c1.stmt# = ct1.value such that Parent*(c1, s1) such that Parent*(s1, a1)

5000
352 - 
variable v1; call c1; if ifs1; constant ct1; 
Select <v1, c1, ifs1, ct1> with c1.stmt# = ct1.value such that Modifies(c1, v1) such that Modifies(ifs1, v1)

5000
353 - 
while w1, w2; if ifs1; constant ct1; 
Select <w1, w2, ifs1, ct1> with w1.stmt# = ct1.value such that Next(w1, w2) such that Follows(w2, ifs1)

5000
354 - 
stmt s1; while w1; if ifs1; constant ct1; 
Select <s1, w1, ifs1, ct1> with ifs1.stmt# = ct1.value such that Next(ifs1, w1) such that Parent(w1, s1)

5000
355 - 
while w1; call c1; prog_line n1; constant ct1; 
Select <w1, c1, n1, ct1> with w1.stmt# = ct1.value such that Next(w1, n1) such that Next(n1, c1)

5000
356 - 
assign a1; stmt s1; call c1; constant ct1; 
Select <a1, s1, c1, ct1> with c1.stmt# = ct1.value such that Next*(c1, s1) such that Follows*(s1, a1)

5000
357 - 
stmt s1; call c1; if ifs1; constant ct1; 
Select <s1, c1, ifs1, ct1> with ifs1.stmt# = ct1.value such that Next*(ifs1, s1) such that Follows*(s1, c1)

5000
358 - 
assign a1; stmt s1; if ifs1; constant ct1; 
Select <a1, s1, ifs1, ct1> with a1.stmt# = ct1.value such that Next*(a1, s1) such that Parent(s1, ifs1)

5000
359 - 
assign a1, a2; call c1; constant ct1; 
Select <a1, a2, c1, ct1> with a1.stmt# = ct1.value such that Affects(a1, a2) with c1.stmt# = ct2.value 

5000
360 - 
assign a1, a2; while w1; constant ct1; 
Select <a1, a2, w1, ct1> with a1.stmt# = ct1.value such that Affects(a1, a2) such that Parent(a2, w1)

5000
361 - 
assign a1, a2; prog_line n1; constant ct1; 
Select <a1, a2, n1, ct1> with a1.stmt# = ct1.value such that Affects(a1, a2) such that Next*(a2, n1)

5000
362 - 
assign a1, a2; variable v1; constant ct1; 
Select <a1, a2, v1, ct1> with a1.stmt# = ct1.value such that Affects*(a1, a2) pattern a2(v1, _)

5000
363 - 
assign a1, a2; variable v1; constant ct1; 
Select <a1, a2, v1, ct1> with a1.stmt# = ct1.value such that Affects*(a1, a2) pattern a2(v1, _)

5000
364 - 
assign a1, a2, a3; constant ct1; 
Select <a1, a2, a3, ct1> with a1.stmt# = ct1.value such that Affects*(a1, a2) such that Affects(a2, a3)

5000
365 - 
variable v1; proc p1; if ifs1; constant ct1; 
Select <v1, p1, ifs1, ct1> with ifs1.stmt# = ct1.value pattern ifs1(v1, _, _) with v1.varName = p1.procName 

5000
366 - 
variable v1; call c1, c2; constant ct1; 
Select <v1, c1, c2, ct1> with c1.stmt# = ct1.value with c1.procName = c2.procName such that Modifies(c2, v1)

5000
367 - 
assign a1; variable v1; if ifs1; constant ct1; 
Select <a1, v1, ifs1, ct1> with a1.stmt# = ct1.value with ifs1.stmt# = ct1.value such that Modifies(a1, v1)

5000