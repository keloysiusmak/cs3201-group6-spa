1 -
while w1; call c1; if ifs1;
Select <w1, c1, ifs1> such that Follows(c1, w1) such that Follows(c1, ifs1)

5000
2 -
assign a1; stmt s1; if ifs1;
Select <a1, s1, ifs1> such that Follows(ifs1, a1) such that Follows*(ifs1, s1)

5000
3 -
stmt s1; while w1; prog_line n1;
Select <s1, w1, n1> such that Follows(n1, w1) such that Parent(n1, s1)

5000
4 -
stmt s1; prog_line n1; if ifs1;
Select <s1, n1, ifs1> such that Follows(ifs1, s1) such that Parent*(ifs1, n1)

5000
5 -
assign a1; variable v1; prog_line n1;
Select <a1, v1, n1> such that Follows(n1, a1) such that Uses(n1, v1)

5000
6 -
variable v1; prog_line n1; if ifs1;
Select <v1, n1, ifs1> such that Follows(n1, ifs1) such that Modifies(n1, v1)

5000
7 -
while w1; prog_line n1, n2;
Select <w1, n1, n2> such that Follows(n1, w1) such that Next(n1, n2)

5000
8 -
stmt s1; while w1; if ifs1;
Select <s1, w1, ifs1> such that Follows(ifs1, s1) such that Next*(ifs1, w1)

5000
9 -
while w1; variable v1; call c1;
Select <w1, v1, c1> such that Follows(w1, c1) pattern w1(v1, _)

5000
10 -
stmt s1; call c1; proc p1;
Select <s1, c1, p1> such that Follows(c1, s1) with c1.procName = p1.procName

5000
11 -
stmt s1; call c1; constant ct1;
Select <s1, c1, ct1> such that Follows(c1, s1) with c1.stmt# = ct1.value

5000
12 -
assign a1; stmt s1; prog_line n1;
Select <a1, s1, n1> such that Follows*(n1, a1) such that Follows(n1, s1)

5000
13 -
prog_line n1, n2; if ifs1;
Select <n1, n2, ifs1> such that Follows*(n1, n2) such that Follows*(n2, ifs1)

5000
14 -
assign a1; stmt s1; if ifs1;
Select <a1, s1, ifs1> such that Follows*(ifs1, s1) such that Parent(ifs1, a1)

5000
15 -
assign a1; call c1, c2;
Select <a1, c1, c2> such that Follows*(c1, c2) such that Parent*(c2, a1)

5000
16 -
while w1; variable v1; call c1;
Select <w1, v1, c1> such that Follows*(w1, c1) such that Uses(w1, v1)

5000
17 -
variable v1; prog_line n1; if ifs1;
Select <v1, n1, ifs1> such that Follows*(n1, ifs1) such that Modifies(n1, v1)

5000
18 -
assign a1; stmt s1; call c1;
Select <a1, s1, c1> such that Follows*(s1, c1) such that Next(s1, a1)

5000
19 -
while w1; call c1; if ifs1;
Select <w1, c1, ifs1> such that Follows*(ifs1, c1) such that Next*(ifs1, w1)

5000
20 -
while w1; variable v1; prog_line n1;
Select <w1, v1, n1> such that Follows*(w1, n1) pattern w1(v1, _)

5000
21 -
variable v1; call c1, c2;
Select <v1, c1, c2> such that Follows*(c1, c2) with c2.procName = v1.varName

5000
22 -
while w1; prog_line n1; constant ct1;
Select <w1, n1, ct1> such that Follows*(n1, w1) with n1.stmt# = ct1.value

5000
23 -
call c1; prog_line n1; if ifs1;
Select <c1, n1, ifs1> such that Parent(n1, c1) such that Follows(ifs1, c1)

5000
24 -
stmt s1, s2; prog_line n1;
Select <s1, s2, n1> such that Parent(s1, s2) such that Follows*(s2, n1)

5000
25 -
stmt s1; while w1; if ifs1;
Select <s1, w1, ifs1> such that Parent(s1, w1) such that Parent(s1, ifs1)

5000
26 -
call c1; prog_line n1; if ifs1;
Select <c1, n1, ifs1> such that Parent(ifs1, c1) such that Parent*(ifs1, n1)

5000
27 -
while w1, w2; variable v1;
Select <w1, w2, v1> such that Parent(w1, w2) such that Uses(w2, v1)

5000
28 -
stmt s1; variable v1; if ifs1;
Select <s1, v1, ifs1> such that Parent(ifs1, s1) such that Modifies(ifs1, v1)

5000
29 -
stmt s1; while w1; if ifs1;
Select <s1, w1, ifs1> such that Parent(s1, ifs1) such that Next(s1, w1)

5000
30 -
assign a1; while w1; if ifs1;
Select <a1, w1, ifs1> such that Parent(ifs1, w1) such that Next*(ifs1, a1)

5000
31 -
variable v1; if ifs1, ifs2;
Select <v1, ifs1, ifs2> such that Parent(ifs1, ifs2) pattern ifs2(v1, _, _)

5000
32 -
stmt s1; call c1; if ifs1;
Select <s1, c1, ifs1> such that Parent(ifs1, c1) with s1.stmt# = c1.procName

5000
33 -
call c1; prog_line n1; if ifs1;
Select <c1, n1, ifs1> such that Parent(n1, c1) with ifs1.stmt# = c1.stmt#

5000
34 -
assign a1; stmt s1; prog_line n1;
Select <a1, s1, n1> such that Parent*(n1, s1) such that Follows(n1, a1)

5000
35 -
assign a1; stmt s1; if ifs1;
Select <a1, s1, ifs1> such that Parent*(ifs1, a1) such that Follows*(ifs1, s1)

5000
36 -
while w1, w2; prog_line n1;
Select <w1, w2, n1> such that Parent*(w1, w2) such that Parent(w2, n1)

5000
37 -
stmt s1, s2; prog_line n1;
Select <s1, s2, n1> such that Parent*(s1, n1) such that Parent*(s1, s2)

5000
38 -
variable v1; if ifs1, ifs2;
Select <v1, ifs1, ifs2> such that Parent*(ifs1, ifs2) such that Uses(ifs2, v1)

5000
39 -
variable v1; if ifs1, ifs2;
Select <v1, ifs1, ifs2> such that Parent*(ifs1, ifs2) such that Modifies(ifs2, v1)

5000
40 -
prog_line n1; if ifs1, ifs2;
Select <n1, ifs1, ifs2> such that Parent*(ifs1, ifs2) such that Next(ifs2, n1)

5000
41 -
while w1; call c1; prog_line n1;
Select <w1, c1, n1> such that Parent*(w1, c1) such that Next*(n1, c1)

5000
42 -
while w1; variable v1; if ifs1;
Select <w1, v1, ifs1> such that Parent*(w1, ifs1) pattern w1(v1, _)

5000
43 -
call c1; prog_line n1; if ifs1;
Select <c1, n1, ifs1> such that Parent*(ifs1, c1) with n1.stmt# = c1.procName

5000
44 -
stmt s1; prog_line n1; constant ct1;
Select <s1, n1, ct1> such that Parent*(n1, s1) with n1.stmt# = ct1.value

5000
45 -
stmt s1; variable v1; if ifs1;
Select <s1, v1, ifs1> such that Uses(s1, v1) such that Follows(s1, ifs1)

5000
46 -
variable v1; prog_line n1, n2;
Select <v1, n1, n2> such that Uses(n1, v1) such that Follows*(n1, n2)

5000
47 -
variable v1; call c1; prog_line n1;
Select <v1, c1, n1> such that Uses(n1, v1) such that Parent(n1, c1)

5000
48 -
while w1; variable v1; if ifs1;
Select <w1, v1, ifs1> such that Uses(w1, v1) such that Parent*(w1, ifs1)

5000
49 -
while w1; variable v1, v2;
Select <w1, v1, v2> such that Uses(w1, v1) such that Uses(w1, v2)

5000
50 -
variable v1, v2; if ifs1;
Select <v1, v2, ifs1> such that Uses(ifs1, v1) such that Modifies(ifs1, v2)

5000
51 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Uses(p1, v1) such that Calls(p1, p2)

5000
52 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Uses(p1, v1) such that Calls*(p1, p2)

5000
53 -
variable v1; prog_line n1; if ifs1;
Select <v1, n1, ifs1> such that Uses(ifs1, v1) such that Next(ifs1, n1)

5000
54 -
stmt s1, s2; variable v1;
Select <s1, s2, v1> such that Uses(s1, v1) such that Next*(s1, s2)

5000
55 -
variable v1; call c1; prog_line n1;
Select <v1, c1, n1> such that Uses(n1, v1) pattern c1(v1, _)

5000
56 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Uses(p1, v1) with p1.procName = p2.procName

5000
57 -
variable v1; prog_line n1; constant ct1;
Select <v1, n1, ct1> such that Uses(n1, v1) with n1.stmt# = ct1.value

5000
58 -
while w1; variable v1; call c1;
Select <w1, v1, c1> such that Modifies(w1, v1) such that Follows(w1, c1)

5000
59 -
stmt s1; variable v1; call c1;
Select <s1, v1, c1> such that Modifies(s1, v1) such that Follows*(s1, c1)

5000
60 -
variable v1; call c1; if ifs1;
Select <v1, c1, ifs1> such that Modifies(ifs1, v1) such that Parent(ifs1, c1)

5000
61 -
variable v1; prog_line n1, n2;
Select <v1, n1, n2> such that Modifies(n1, v1) such that Parent*(n1, n2)

5000
62 -
variable v1, v2; call c1;
Select <v1, v2, c1> such that Modifies(c1, v1) such that Uses(c1, v2)

5000
63 -
variable v1, v2; if ifs1;
Select <v1, v2, ifs1> such that Modifies(ifs1, v1) such that Modifies(ifs1, v2)

5000
64 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Modifies(p1, v1) such that Calls(p1, p2)

5000
65 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Modifies(p1, v1) such that Calls*(p1, p2)

5000
66 -
variable v1; call c1; if ifs1;
Select <v1, c1, ifs1> such that Modifies(ifs1, v1) such that Next(ifs1, c1)

5000
67 -
while w1, w2; variable v1;
Select <w1, w2, v1> such that Modifies(w1, v1) such that Next*(w1, w2)

5000
68 -
variable v1, v2; if ifs1;
Select <v1, v2, ifs1> such that Modifies(ifs1, v1) pattern ifs1(v2, _, _)

5000
69 -
while w1; variable v1; prog_line n1;
Select <w1, v1, n1> such that Modifies(n1, v1) with w1.stmt# = v1.varName

5000
70 -
variable v1; prog_line n1; constant ct1;
Select <v1, n1, ct1> such that Modifies(n1, v1) with n1.stmt# = ct1.value

5000
71 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Calls(p1, p2) such that Uses(p2, v1)

5000
72 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Calls(p1, p2) such that Modifies(p2, v1)

5000
73 -
proc p1, p2, p3;
Select <p1, p2, p3> such that Calls(p1, p2) such that Calls(p2, p3)

5000
74 -
proc p1, p2, p3;
Select <p1, p2, p3> such that Calls(p1, p2) such that Calls*(p2, p3)

5000
75 -
call c1; proc p1, p2;
Select <c1, p1, p2> such that Calls(p1, p2) with p2.procName = c1.procName

5000
76 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Calls*(p1, p2) such that Uses(p2, v1)

5000
77 -
variable v1; proc p1, p2;
Select <v1, p1, p2> such that Calls*(p1, p2) such that Modifies(p2, v1)

5000
78 -
proc p1, p2, p3;
Select <p1, p2, p3> such that Calls*(p1, p2) such that Calls(p2, p3)

5000
79 -
proc p1, p2, p3;
Select <p1, p2, p3> such that Calls*(p1, p2) such that Calls*(p2, p3)

5000
80 -
call c1; proc p1, p2;
Select <c1, p1, p2> such that Calls*(p1, p2) with p2.procName = c1.procName

5000
81 -
stmt s1; prog_line n1; if ifs1;
Select <s1, n1, ifs1> such that Next(ifs1, n1) such that Follows(ifs1, s1)

5000
82 -
assign a1; if ifs1, ifs2;
Select <a1, ifs1, ifs2> such that Next(ifs1, a1) such that Follows*(ifs1, ifs2)

5000
83 -
stmt s1; call c1, c2;
Select <s1, c1, c2> such that Next(c1, s1) such that Parent(c1, c2)

5000
84 -
call c1; if ifs1, ifs2;
Select <c1, ifs1, ifs2> such that Next(ifs1, c1) such that Parent*(ifs1, ifs2)

5000
85 -
variable v1; call c1; prog_line n1;
Select <v1, c1, n1> such that Next(c1, n1) such that Uses(c1, v1)

5000
86 -
variable v1; prog_line n1, n2;
Select <v1, n1, n2> such that Next(n1, n2) such that Modifies(n2, v1)

5000
87 -
assign a1; stmt s1; prog_line n1;
Select <a1, s1, n1> such that Next(n1, a1) such that Next(n1, s1)

5000
88 -
call c1; prog_line n1; if ifs1;
Select <c1, n1, ifs1> such that Next(n1, ifs1) such that Next*(n1, c1)

5000
89 -
while w1; variable v1; if ifs1;
Select <w1, v1, ifs1> such that Next(ifs1, w1) pattern ifs1(v1, _, _)

5000
90 -
while w1; call c1, c2;
Select <w1, c1, c2> such that Next(c1, w1) with c1.procName = c2.procName

5000
91 -
while w1; call c1; constant ct1;
Select <w1, c1, ct1> such that Next(w1, c1) with w1.stmt# = ct1.value

5000
92 -
assign a1; call c1; prog_line n1;
Select <a1, c1, n1> such that Next*(c1, n1) such that Follows(c1, a1)

5000
93 -
assign a1; call c1; prog_line n1;
Select <a1, c1, n1> such that Next*(n1, c1) such that Follows*(n1, a1)

5000
94 -
stmt s1; while w1; call c1;
Select <s1, w1, c1> such that Next*(w1, c1) such that Parent(w1, s1)

5000
95 -
stmt s1; prog_line n1; if ifs1;
Select <s1, n1, ifs1> such that Next*(ifs1, s1) such that Parent*(ifs1, n1)

5000
96 -
variable v1; call c1; if ifs1;
Select <v1, c1, ifs1> such that Next*(ifs1, c1) such that Uses(ifs1, v1)

5000
97 -
stmt s1; while w1; variable v1;
Select <s1, w1, v1> such that Next*(s1, w1) such that Modifies(s1, v1)

5000
98 -
assign a1; call c1; if ifs1;
Select <a1, c1, ifs1> such that Next*(c1, ifs1) such that Next(c1, a1)

5000
99 -
stmt s1, s2; call c1;
Select <s1, s2, c1> such that Next*(s1, s2) such that Next*(s2, c1)

5000
100 -
variable v1; call c1; if ifs1;
Select <v1, c1, ifs1> such that Next*(ifs1, c1) pattern ifs1(v1, _, _)

5000
101 -
assign a1; call c1; proc p1;
Select <a1, c1, p1> such that Next*(c1, a1) with c1.procName = p1.procName

5000
102 -
stmt s1, s2; constant ct1;
Select <s1, s2, ct1> such that Next*(s1, s2) with s2.stmt# = ct1.value

5000
103 -
while w1; variable v1; if ifs1;
Select <w1, v1, ifs1> pattern ifs1(v1, _, _) such that Follows(ifs1, w1)

5000
104 -
while w1; variable v1; call c1;
Select <w1, v1, c1> pattern w1(v1, _) such that Follows*(w1, c1)

5000
105 -
stmt s1; variable v1; if ifs1;
Select <s1, v1, ifs1> pattern ifs1(v1, _, _) such that Parent(ifs1, s1)

5000
106 -
stmt s1; while w1; variable v1;
Select <s1, w1, v1> pattern w1(v1, _) such that Parent*(w1, s1)

5000
107 -
while w1; variable v1, v2;
Select <w1, v1, v2> pattern w1(v1, _) such that Uses(w1, v2)

5000
108 -
variable v1, v2; if ifs1;
Select <v1, v2, ifs1> pattern ifs1(v1, _, _) such that Modifies(ifs1, v2)

5000
109 -
while w1; variable v1; call c1;
Select <w1, v1, c1> pattern w1(v1, _) such that Next(w1, c1)

5000
110 -
while w1; variable v1; call c1;
Select <w1, v1, c1> pattern w1(v1, _) such that Next*(w1, c1)

5000
111 -
while w1; variable v1; if ifs1;
Select <w1, v1, ifs1> pattern w1(v1, _) pattern ifs1(v1, _, _)

5000
112 -
assign a1; while w1; variable v1;
Select <a1, w1, v1> pattern w1(v1, _) with a1.stmt# = v1.varName

5000
113 -
while w1; variable v1; constant ct1;
Select <w1, v1, ct1> pattern w1(v1, _) with w1.stmt# = ct1.value

5000
114 -
call c1; proc p1; if ifs1;
Select <c1, p1, ifs1> with c1.procName = p1.procName such that Follows(c1, ifs1)

5000
115 -
call c1; proc p1; if ifs1;
Select <c1, p1, ifs1> with c1.procName = p1.procName such that Follows*(c1, ifs1)

5000
116 -
call c1; proc p1; if ifs1;
Select <c1, p1, ifs1> with c1.procName = p1.procName such that Parent(c1, ifs1)

5000
117 -
call c1; proc p1; if ifs1;
Select <c1, p1, ifs1> with c1.procName = p1.procName such that Parent*(c1, ifs1)

5000
118 -
variable v1; call c1, c2;
Select <v1, c1, c2> with c1.procName = c2.procName such that Uses(c2, v1)

5000
119 -
variable v1; call c1; proc p1;
Select <v1, c1, p1> with p1.procName = c1.procName such that Modifies(p1, v1)

5000
120 -
call c1; proc p1, p2;
Select <c1, p1, p2> with p1.procName = c1.procName such that Calls(p1, p2)

5000
121 -
call c1; proc p1, p2;
Select <c1, p1, p2> with p1.procName = c1.procName such that Calls*(p1, p2)

5000
122 -
call c1, c2; prog_line n1;
Select <c1, c2, n1> with c1.procName = c2.procName such that Next(c2, n1)

5000
123 -
stmt s1; variable v1; call c1;
Select <s1, v1, c1> with c1.procName = v1.varName such that Next*(c1, s1)

5000
124 -
variable v1, v2; proc p1;
Select <v1, v2, p1> with v1.varName = p1.procName pattern v1(v2, _)

5000
125 -
variable v1; call c1; proc p1;
Select <v1, c1, p1> with c1.procName = p1.procName with c1.procName = v1.varName

5000
126 -
call c1; proc p1; constant ct1;
Select <c1, p1, ct1> with c1.procName = p1.procName with c1.stmt# = ct1.value

5000
127 -
stmt s1; call c1; constant ct1;
Select <s1, c1, ct1> with c1.stmt# = ct1.value such that Follows(c1, s1)

5000
128 -
while w1, w2; constant ct1;
Select <w1, w2, ct1> with w1.stmt# = ct1.value such that Follows*(w1, w2)

5000
129 -
while w1, w2; constant ct1;
Select <w1, w2, ct1> with w1.stmt# = ct1.value such that Parent(w1, w2)

5000
130 -
call c1; if ifs1; constant ct1;
Select <c1, ifs1, ct1> with ifs1.stmt# = ct1.value such that Parent*(ifs1, c1)

5000
131 -
variable v1; prog_line n1; constant ct1;
Select <v1, n1, ct1> with n1.stmt# = ct1.value such that Uses(n1, v1)

5000
132 -
stmt s1; variable v1; constant ct1;
Select <s1, v1, ct1> with s1.stmt# = ct1.value such that Modifies(s1, v1)

5000
133 -
stmt s1; prog_line n1; constant ct1;
Select <s1, n1, ct1> with s1.stmt# = ct1.value such that Next(s1, n1)

5000
134 -
call c1; if ifs1; constant ct1;
Select <c1, ifs1, ct1> with c1.stmt# = ct1.value such that Next*(c1, ifs1)

5000
135 -
while w1; variable v1; constant ct1;
Select <w1, v1, ct1> with w1.stmt# = ct1.value pattern w1(v1, _)

5000
136 -
call c1, c2; constant ct1;
Select <c1, c2, ct1> with c1.stmt# = ct1.value with c1.procName = c2.procName

5000
137 -
while w1; constant ct1, ct2;
Select <w1, ct1, ct2> with w1.stmt# = ct1.value with w1.stmt# = ct2.value

5000
