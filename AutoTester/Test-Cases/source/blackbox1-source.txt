procedure Main {
while one {
	one = two + three * four * five * six;
	seven = eight + 3;
	nine = ten - eleven * ( twelve + thirteen);
	fourteen = fifteen + 1; }
one = 5;
two = one;
call Third;
three = two + 2;
four = 1;
call Second;
one = two + one + three + five +5; 
while eight {
	one = three + 3 + 2+two;
	four = four + 7;
	if eight then{
		ten = five + 10; } 
	else {
		three = one + 1; 
		while three {
			two = three + one * ten - two;
			if eight then {
				if five then {
					eleven = five + 1;
					twelve = thirteen * five * five;
					while ten {
						call Second;
					}
					fourteen = 2 * thirteen * five - seven + eight;
				}
				else{
					twelve = nine * ten;
					fifteen = 2 * nine + ten;
				}
	        }
			else{
				three = one + 3 * ( two - nine);     
			}
		}
		while two{
			ten = five - 500;
			nine = two + three * ( three * three - ( three + three ) );
		}
		six = fourteen * 3;       	
		one = one + two + three; 
    }
	one = one + two + three + seven * five; 
	while eight {
	 	eight = eight + 1 * five * fifteen; 
    }
}
one = one + sixteen ;
}

procedure Second {
	thirteen = 2;
	eleven = twelve - thirteen;
	while one {
		call Third;
	}
	if two then {
		one = two + three * ten;
	}
	else {
		call Third;
		one = two;
		while three {
			one = two;
		}
	}
}

procedure Third {
	if seven then {
		fifteen = sixteen - six + six;} 
	else {
		seven = three * ten; }
}